name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - run: cargo clippy --all-targets --all-features -- -D warnings

  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo test --all

  release:
    name: Release artifacts
    runs-on: ubuntu-latest
    needs:
      - fmt
      - clippy
      - test
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Build release binary
        run: cargo build --release --bin obsctl
      - name: Prepare archive
        run: |
          mkdir -p dist
          cp target/release/obsctl dist/
          cd dist
          tar czf obsctl-${{ github.ref_name }}-linux-x86_64.tar.gz obsctl
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: obsctl-${{ github.ref_name }}-linux-x86_64
          path: dist/obsctl-${{ github.ref_name }}-linux-x86_64.tar.gz
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/obsctl-${{ github.ref_name }}-linux-x86_64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
